language: go

sudo: required

services: docker

go:
  - "1.13"
  - "1.14"

env:
  - VERSION=latest

install:
  - go mod tidy
  - go build

after_success:
  - bash <(curl -s https://codecov.io/bash)

after_script:
  - docker images

before_install:
  - sudo rm -f /usr/local/bin/docker-slim
  - sudo rm -f /usr/local/bin/docker-slim-sensor
  - curl -L https://github.com/docker-slim/docker-slim/releases/download/1.26.1/dist_linux.tar.gz --output docker-slim.tar.gz
  - tar xvf docker-slim.tar.gz
  - chmod +x dist_linux/docker-slim
  - chmod +x dist_linux/docker-slim-sensor
  - sudo mv dist_linux/docker-slim /usr/local/bin
  - sudo mv dist_linux/docker-slim-sensor /usr/local/bin
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - sudo service docker restart
  - docker-compose --version
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.25.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version
  - docker ps

before_script:
  - IMAGE="qorpress/qorpress:${VERSION/\//-}"

script:
  - go mod tidy
  - go test -race -coverprofile=coverage.txt -covermode=atomic
  - docker-slim version
  - docker build --squash -t "$IMAGE" .
  - sudo docker-slim build "$IMAGE"
  - sudo docker run -ti "$IMAGE" -h
  - docker-compose up -d
  - docker images
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push "$IMAGE"
